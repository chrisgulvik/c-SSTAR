name: integration tests

on:
  pull_request: # Run on all pull requests regardless of branch name
  push:
    branches: [main, master, dev, development]  # Run on all pushes to main, master, dev, and development
  schedule:     # Run at 05:55 AM, on day 1 of all months on master
    - cron:  '55 5 1 * *'
      branches: master


jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04] #arch and centos both unavailable https://github.com/actions/virtual-environments#available-environments
        python-version: [3.6, 3.9]

    steps:
    - name: initialize github actions test environment
      uses: actions/checkout@v2

    - name: report environment variables for debugging
      run: |
        printf '%s\n' \
          "Workflow ${GITHUB_WORKFLOW}" \
          "Action Number ${GITHUB_ACTION}" \
          "Run ID ${GITHUB_RUN_ID}" \
          "Run Number ${GITHUB_RUN_NUMBER}" \
          "Workspace ${GITHUB_WORKSPACE}"

    - name: setup workspace
      run: |
        mkdir -v "${GITHUB_WORKSPACE}/Downloads"

    - name: setup conda environment
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: my_env
        channels: conda-forge,bioconda,defaults
        channel-priority: true
        mamba-version: "*"
        python-version: ${{ matrix.python-version }}

    - name: report conda version, mamba version, and config info
      shell: bash -l {0}
      run: |
        conda activate my_env
        conda info
        conda list
        conda config --show-sources
        conda config --show
        mamba --version

    - name: install blast with mamba
      shell: bash -l {0}
      run: |
        conda activate my_env
        mamba install blast -y

    - name: install python packages
      shell: bash -l {0}
      run: |
        conda activate my_env
        python --version
        python setup.py -q install

    - name: run python tests
      shell: bash -l {0}
      run: |
        conda activate my_env
        python setup.py test
        echo 'INFO: tests complete'
